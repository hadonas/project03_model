name: Deploy to Azure (Simple)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: ${{ secrets.AZURE_WEBAPP_NAME }}
  AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: hadonas/rag-qna-service:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        images: hadonas/rag-qna-service:latest
        
    - name: Wait for deployment
      run: |
        echo "Waiting for deployment to complete..."
        sleep 30
        
    - name: Health Check
      run: |
        echo "Checking app health..."
        APP_URL="https://${{ env.AZURE_WEBAPP_NAME }}-d0evbkbmbxeaf7at.scm.koreacentral-01.azurewebsites.net"
        echo "App URL: $APP_URL"
        
        # 헬스체크 시도
        for i in {1..5}; do
          echo "Health check attempt $i/5..."
          if curl -f "$APP_URL/health" > /dev/null 2>&1; then
            echo "✅ App is healthy!"
            echo "Health check URL: $APP_URL/health"
            echo "API docs URL: $APP_URL/docs"
            break
          else
            if [ $i -lt 5 ]; then
              echo "⏳ App not ready yet, waiting 10 seconds..."
              sleep 10
            else
              echo "⚠️  Health check failed after 5 attempts"
              echo "Please check the app manually at: $APP_URL"
            fi
          fi
        done
